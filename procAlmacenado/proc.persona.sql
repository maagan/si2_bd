 
-- :::::::::::::::::::::::    PERSONA -- TABLA PERSONA
-- ::::::::::: "ELIMINA"  
DELIMITER //
CREATE PROCEDURE ELIMINAR_PERSONA(_ID INT)
BEGIN
	DECLARE _RES CHAR ;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		-- SHOW COUNT(*) ERRORS;
		-- SELECT @@error_count;
		-- SHOW ERRORS;
        SET _RES = 0;
        SELECT _RES AS RESP;
		ROLLBACK;
	END;
	START TRANSACTION;
    	UPDATE PERSONA  SET ESTADO=0  WHERE ID = _ID;
        SET _RES = 1;
        SELECT _RES AS RESP;
	COMMIT;
END;
// DELIMITER ;
-- CALL xlqhgpsg_DB_RHH.ELIMINAR_PERSONA(5)
-- DROP PROCEDURE ELIMINAR_PERSONA;
 SELECT * FROM PERSONA;


-- :::::::::::::::: MOSTRAR PERSONAS..
DELIMITER //
CREATE PROCEDURE MOSTRAR_PERSONA()
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		-- SHOW COUNT(*) ERRORS;
		-- SELECT @@error_count;
		-- SHOW ERRORS;
		ROLLBACK;
	END;
    START TRANSACTION;
    	SELECT P.ID, P.NOMBRE, P.APELLIDOS,P.CI,P.EMAIL, P.DIRECCION FROM PERSONA P  ;
	COMMIT;
END;
// DELIMITER ;
-- CALL xlqhgpsg_DB_RHH.MOSTRAR_PERSONA()
-- DROP PROCEDURE MOSTRAR_PERSONA;
 SELECT * FROM PERSONA;


-- :::::::::::::::: MODIFICA LA TABLA DE PERSONA::::::::::::

DELIMITER //
CREATE PROCEDURE MODIFICAR_PERSONA(_ID INT , _NOMBRE VARCHAR(25),_APELLIDOS VARCHAR(25),
_CI VARCHAR(25),_EMAIL VARCHAR(100),_DIRECCION VARCHAR(25),_FOTO VARCHAR(45))
BEGIN
	DECLARE _RES CHAR ;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		-- SHOW COUNT(*) ERRORS;
		-- SELECT @@error_count;
		-- SHOW ERRORS;
        SET _RES = 0;
        SELECT _RES AS RESP;
		ROLLBACK;
	END;
    START TRANSACTION;
    	UPDATE PERSONA  SET NOMBRE=_NOMBRE ,APELLIDOS = _APELLIDOS , CI=_CI ,EMAIL =_EMAIL,
			DIRECCION=_DIRECCION , FOTO=_FOTO WHERE ID = _ID;
		SET _RES = 1;
        SELECT _RES AS RESP;
	COMMIT;
END;
// DELIMITER ;

-- SELECT * FROM  PERSONA;
--  call xlqhgpsg_DB_RHH.MODIFICAR_PERSONA('1','melina','flores','963124','melina@gmail.com','mutualista','melina.jpg');
-- DROP PROCEDURE MODIFICAR_PERSONA;
-- SELECT * FROM PERSONA ;

  
  
-- ::::::: BUSCAR 
  --  ENCUENTRA TODOS LOS NOMBRES Q COMIENZAN EN _NOMBRE
DELIMITER //
CREATE PROCEDURE BUSCAR_PERSONA(_NOMBRE VARCHAR(50))
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		-- SHOW COUNT(*) ERRORS;
		-- SELECT @@error_count;
		-- SHOW ERRORS;
		ROLLBACK;
	END;
    START TRANSACTION;
    	SELECT P.ID,P.NOMBRE,P.APELLIDOS,P.CI,P.EMAIL,P.DIRECCION,CANT_INTENTO,P.VISITAS FROM PERSONA P WHERE P.NOMBRE LIKE CONCAT( '%',_NOMBRE,'%');
	COMMIT;
END;
// DELIMITER ;
-- CALL  xlqhgpsg_DB_RHH.BUSCAR_PERSONA('MAC')
-- DROP PROCEDURE BUSCAR_PERSONA;
-- SELECT * FROM PERSONA


DELIMITER //
CREATE PROCEDURE AAA_LOGIN_USER(_EMAIL VARCHAR(50), _PASS VARCHAR(50))
BEGIN
	DECLARE _ESTADO_USER BOOLEAN; -- USUARIO ESTA BLOQUEADO O NO LO ESTA
	DECLARE _ID INT;		  -- ID DEL USUARIO
	DECLARE _R INT;			  -- SI ES CORECTO EL LOGIN O NO ES
	DECLARE _NOMB VARCHAR(50);
    DECLARE _PASSW VARCHAR(50);-- CONTRA DEL USUARIO
    DECLARE _CANT INT;			-- CANTIDAF DE INTENTOS
    DECLARE _CANT_VISIT INT;   -- CANTIDAD DE VISITAS QUE TIENE EL USUARIO
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		-- SHOW COUNT(*) ERRORS;
		-- SELECT @@error_count;
		-- SHOW ERRORS;
		ROLLBACK;
	END;
    START TRANSACTION;
		SET _ESTADO_USER = (SELECT A.ESTADO FROM PERSONA A WHERE A.EMAIL=_EMAIL);-- SI NO ESISTE EMAIL DEVUELVE VACIO
		IF(_ESTADO_USER)THEN
			SET _PASSW = (SELECT A.PASS FROM PERSONA A WHERE A.EMAIL=_EMAIL);
			IF(_PASSW = _PASS) THEN
				SET _ID = (SELECT A.ID FROM PERSONA A WHERE A.EMAIL=_EMAIL AND A.PASS=_PASS);
				SET _CANT_VISIT = (SELECT A.CANT_INTENTO+1 FROM PERSONA A WHERE A.ID=_ID);
				UPDATE PERSONA SET VISITAS = _CANT_VISIT WHERE ID=_ID;
				SET _R=20; -- DATOS CORRECTOS
				SELECT A.ID, A.NOMBRE, A.APELLIDOS,A.FOTO, _R AS RESULT FROM PERSONA A WHERE A.ID=_ID;--  OJO AQUI
			ELSE
				SET _ID = (SELECT A.ID FROM PERSONA A WHERE A.EMAIL=_EMAIL);
				SET _CANT = (SELECT A.CANT_INTENTO+1 FROM PERSONA A WHERE A.EMAIL=_EMAIL);
				UPDATE PERSONA SET CANT_INTENTO = _CANT WHERE ID=_ID;
				SET _R=_CANT; -- PASS INCORECTO
				IF(_CANT = 4)THEN
					UPDATE PERSONA SET ESTADO = 0 WHERE ID=_ID; -- USUARIO BLOQUEADO
					SELECT _R AS RESULT;
				ELSE
					SELECT _R AS RESULT; -- NUMERO DE INTENTOS LLEGA AL 4 MESAJE DE USUARIO BLOQUEADO
				END IF;
			END IF;
		ELSE
			SET _R=10; -- USUARIO  INHABILITADO O DATOS INCORRECTOS
			SELECT _R AS RESULT;
		END IF;
    COMMIT;
END;
//DELIMITER ;


